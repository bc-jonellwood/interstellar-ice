---
interface Props {
  title: string;
}

const { title } = Astro.props;
import NavItem from "../components/NavItem.astro";
import Head from "../components/Head.astro";
// import { ViewTransitions } from "astro:transitions";
import Nav from "../components/Nav";
import Footer from "../components/Footer.astro";
import Main from "../components/Main.astro";
import Breadcrumb from "../components/Breadcrumb.astro";
import SideNav from "../components/SideNav.astro";
// import DarkMode from "../components/DarkMode.astro";
import TopNav from "../components/TopNav.astro";
---

<!DOCTYPE html>
<html lang="en" class="dark">
  <!-- <body
    class="bg-[radial-gradient(ellipse_at_top_left,_var(--tw-gradient-stops))] from-blue-900 from-10% via-blue-200 via-30% to-blue-600 to-90%"> -->
  <body>
    <head>
      <meta charset="UTF-8" />
      <meta name="description" content="Astro description" />
      <meta name="viewport" content="width=device-width" />
      <link
        href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.css"
        rel="stylesheet"
      />
      <!-- <script
        is:inline
        src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.0/flowbite.min.js"
      ></script> -->
      <!-- <link rel="icon" type="image/svg+xml" href="/favicon.svg" /> -->
      <link rel="icon" type="png" href="/bw.png" />
      <meta name="generator" content={Astro.generator} />
      <title>{title}</title>
      <script>
        // On page load or when changing themes, best to add inline in `head` to avoid FOUC
        if (
          localStorage.getItem("color-theme") === "dark" ||
          (!("color-theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
      </script>
      <!-- <ViewTransitions /> -->
    </head>
    <body>
      <div class="container w-full">
        <!-- <SideNav /> -->
        <TopNav />
        <!-- <Nav client:load /> -->
        <!-- <DarkMode /> -->
        <!-- </div> -->
        <!-- <Breadcrumb /> -->
        <!-- <div class="container max-w-screen-xl mx-20"></div> -->
        <div class="rounded-xl">
          <!-- <TopNav /> -->
          <!-- <DarkMode /> -->
          <div>
            <div class="md:shrink-0">
              <!-- <div> -->
              <!-- <Main> -->
              <slot />
              <!-- </Main> -->
            </div>
          </div>
        </div>
        <Footer />
      </div>
      <script
        is:inline
        src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.0/flowbite.min.js"
      ></script>
      <script>
        var themeToggleDarkIcon = document.getElementById(
          "theme-toggle-dark-icon"
        );
        var themeToggleLightIcon = document.getElementById(
          "theme-toggle-light-icon"
        );

        // Change the icons inside the button based on previous settings
        if (
          localStorage.getItem("color-theme") === "dark" ||
          (!("color-theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          themeToggleLightIcon.classList.remove("hidden");
        } else {
          themeToggleDarkIcon.classList.remove("hidden");
        }

        var themeToggleBtn = document.getElementById("theme-toggle");

        themeToggleBtn.addEventListener("click", function () {
          // toggle icons inside button
          themeToggleDarkIcon.classList.toggle("hidden");
          themeToggleLightIcon.classList.toggle("hidden");

          // if set via local storage previously
          if (localStorage.getItem("color-theme")) {
            if (localStorage.getItem("color-theme") === "light") {
              document.documentElement.classList.add("dark");
              localStorage.setItem("color-theme", "dark");
            } else {
              document.documentElement.classList.remove("dark");
              localStorage.setItem("color-theme", "light");
            }

            // if NOT set via local storage previously
          } else {
            if (document.documentElement.classList.contains("dark")) {
              document.documentElement.classList.remove("dark");
              localStorage.setItem("color-theme", "light");
            } else {
              document.documentElement.classList.add("dark");
              localStorage.setItem("color-theme", "dark");
            }
          }
        });
      </script>
      <script>
        import "flowbite";
      </script>
    </body>
    <style is:global>
      :root {
        --accent: 255, 215, 0;
        --accent-light: 88, 201, 232;
        --accent-dark: 0, 85, 119;
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          rgb(var(--accent-light)) 30%,
          white 60%
        );
      }
      html {
        font-family:
          system-ui,
          -apple-system,
          BlinkMacSystemFont,
          "Segoe UI",
          Roboto,
          Oxygen,
          Ubuntu,
          Cantarell,
          "Open Sans",
          "Helvetica Neue",
          sans-serif;
        /* background: rgb(var(--background-gradient)); */
        /* background-size: 224px; */
      }
      body {
        background-image: radial-gradient(
          farthest-corner circle at 0% 0%,
          #03a9f4 0%,
          26%,
          #03a9f499 0% 0%,
          47%,
          #03a9f490 0% 0%,
          69%,
          #03a9f498 0% 0%,
          89%,
          #005475 100%
        );
        background-size: cover;
        background-attachment: fixed;
        /* background-color: #03a9f4; */
      }
      .dark body {
        background-color: #000;
      }
      .link-card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        grid-gap: 1rem;
      }
      .question-card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        grid-gap: 1rem;
      }

      /* #####################IMg##g@ll3ry############################# */
      .gallery {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 30px;
        margin: 0;
        padding: 0;
      }

      .gallery img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        opacity: 0.8;
        box-shadow:
          25px 25px 75px rgba(0, 0, 0, 0.25),
          10px 10px 70px rgba(0, 0, 0, 0.25),
          inset 5px 5px 10px rgba(0, 0, 0, 0.5),
          inset 5px 5px 20px rgba(255, 255, 255, 0.2),
          inset -5px -5px 15px rgba(0, 0, 0, 0.75);
      }
      .gallery .img-holder:hover {
        opacity: 1;
        filter: blur(0);
        box-shadow: 0 0 1px 2px rgba(0, 0, 0, 0.5);
      }
    </style>
  </body>
</html>
